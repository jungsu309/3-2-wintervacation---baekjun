20211024 그래프이론
비중은 조금 낮다

kruskal(:크루스칼. 그리디이용), topology(:위상정렬. 큐or 스택 자료구조이용)
어떤 문제에서 여러 도시가 연결되어있다< 같은 식일때 그래프를 이용하자고 생각하자
그리고 tree자료구조도 다양한 알고리즘에서 사용되므로 꼭 기억하자.!!
그리고 인접행렬과 인접리스트도 있었음

중요한것은 메모리와 시간을 염두에 두고 알고리즘을 선택해서 구현해야한다.
최단경로에서 노드의 개수가 적을때는 플로이드 써도된다 하지만 노드의 개수가 많으면
우선순위큐를 이용하는 다익스트라를 쓰자.

여태 배운 그래프 말고 다른 그래프들을 살펴보는 단원

1. 서로소집합.
서로소 집합 = 공통원소가 없는 두 집합.
=union-find (합치기-찾기)자료구조라고도 불린다.

각 원소는 노드로 표현이 되고 같은집합에 속하는 경우 간선으로 이어줌.
이어줄때 숫자가 작은 원소를 부모로 설정

서로소 코드로 작성(idle)
서로소집합의 알고리즘 시간 복잡도는 개 복잡하게 O(V+M(1+log(2-M/V)(V)))임

cycle도 찾을수있음. 각각의 원소의 루트가 서로 같은경우, 사이클이 있다는걸 알수잇음.

2. 신장트리
신장트리 = 하나의 그래프가 있을때 모든 노드를 포함하면서 사이클이 존재하지 않는 부분그래프
대표적인 신장트리알고리즘으로 크루스칼 알고리즘이있음

크루스칼알고리즘 -> 비용이 싼 간선을 고르되, 사이클이 없을때만 경로에 추가시킴
(간선위주로 고르기)
이때 사이클 확인할때는 위에서 나온 서로소집합의 cycle 판독하는 코드를 이용.
시간 복잡도는 O(ElogE)

3. 위상정렬
방향그래프의 모든 노드를 방향성에 거스르지 않도록 순서대로 나열하는 것
진입차수 :  특정한 노드로 들어오는 간선의 개수.
진입차수가 0인거부터 시작하고, 큐에서 빼면서 해당 노드와 연결된 간선들을 지워나가면서
반복하는 방법.
시간복잡도는 O(E+V)