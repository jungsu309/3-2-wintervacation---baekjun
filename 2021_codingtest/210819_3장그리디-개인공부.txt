# 그리디 이론공부
2021.08.19

현재 상황에서 지금 당장 좋은 것만 고르는 방법 -> 지금 제일 좋은거 찾고나서 그 다음거는 
나중에 생각하기. 

특징으로는 사전에 외우고 있지 않아도 풀 수 있는 가능성이 높은 문제라고 함.
다른 알고리즘들은 거의 외우고 있어야 풀수 있는 경우가 많다.
예외적으로 그리디 이면서 가장 빠르게 찾는 정렬해야하는 경우는 외우고 있어야 함.

거스름돈문제 -> 가장 큰 단위 화폐부터 차례대로 계산.

n = 금액
count = 0
list = [500,100,50,10] -> 큰거부터 차례대로 

for coin in list:
	count = count + (n//coin) -> 나눈 몫을 이용하여 숫자세기
	n = n%coin -> 큰 화폐로 나눈 후의 나머지를 이용하여 큰 화폐로 거슬러 주고
			남은 잔액으로 금액을 수정. 이후 포문 반복
결과-> 동전의 수 count 획득
금액과 상관 없이 동전의 종류에 영향을 받는 속도. 왜냐하면 포문이 동전 종류 만큼 돌기 때문.


그리디 알고리즘으로는 최적의 해를 구할 수 없을 때가 있다. 따라서 정답이 정당한지
검토 할 수 있어야함.
이 검토가 불가능 하다면 다이나믹프로그래밍이나 그래프 알고리즘을 생각해봐야함
위 거스름돈 문제는 동전의 종류가 배수 형태로 주어저야만 가능하고, 
무작위로 500,400,100 이런 경우 최적의 해를 찾기는 불가능하다.