#20210905 DFS/BFS 개인공부

탐색 알고리즘중 하나인 DFS, BFS를 이해하기 위해서는 스택, 큐, 재귀함수 이해가 필요
자료구조 : 데이터를 표현하고 관리하고 처리하기 위한 구조.
-스택 : 선입후출구조
-큐 : 선입선출구조
-재귀함수 : 자기자신을 다시 호출하는함수->언제끝날지 종료조건이 필수.
	스택 자료구조와 동일함. 반복문을 이용하는거보다 간결한 형태임.

노드와 간선 표현방법->1. 인접행렬 표현 2.인접리스트로 표현 =>파이썬에서는 둘다 2차원리스트로표현
1.인접행렬표현
[[0,7,5],[7,0,inf],[5,inf,0]]
2. 인접리스트표현
graph = [[]for _ in range(3)] : 행이3개인 2차원 인접리스트.
graph[0].append(1,7) graph[0].append(2,5)#(노드,거리)
graph[1].append(0,7)
graph[2].append(0,5)

1.인접행렬표현:메모리가낭비됨,속도가 빠름
2.인접리스트표현:메모리가효율적임,속도가 느림

DFS - 깊이우선탐색. 최대한 깊숙히 들어가서 노드를 방문한 후 다시 돌아가 다른경로로탐색
현재 방문한 노드를 스택에 넣고 빼면서 스택에 아무것도 없을때까지 반복하는것.
주로 재귀함수 이용

BFS-너비우선탐색. 가까운노드부터 탐색하는 알고리즘
현재 방문한 노드를 큐에 넣고빼면서 큐에 아무것도 없을때까지 반복하는것.
DFS보다 쉬운듯 하고 deque라이브러리를 사용하는것이 좋다. 시간이 절약되서.
실제 수행 시간은 DFS보다 좋다.

만약 탐색 문제가 이차원배열을 상하좌우로 움직이게 하는 경우로 나온다면, 
그래프로 바꿔서 생각하면 더 쉽다. 탐색문제 = 그래프형태로 표현부터하기